# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  setenv:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Generate _config.yml
    run: |
      # 检查BLOG_NAME变量
      if [ -z "${{ secrets.BLOG_NAME }}" ]; then
        echo "BLOG_NAME is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_DESCRIPTION变量
      if [ -z "${{ secrets.BLOG_DESCRIPTION }}" ]; then
        echo "BLOG_DESCRIPTION is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_AVATAR变量
      if [ -z "${{ secrets.BLOG_AVATAR }}" ]; then
        echo "BLOG_AVATAR is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_FAVICON变量
      if [ -z "${{ secrets.BLOG_FAVICON }}" ]; then
        echo "BLOG_FAVICON is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_PAGINATE变量
      if [ -z "${{ secrets.BLOG_PAGINATE }}" ]; then
        echo "BLOG_PAGINATE is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_EXCERPT_SEPARATOR变量
      if [ -z "${{ secrets.BLOG_EXCERPT_SEPARATOR }}" ]; then
        echo "BLOG_EXCERPT_SEPARATOR is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_EMAIL变量
      if [ -z "${{ secrets.BLOG_EMAIL }}" ]; then
        echo "BLOG_EMAIL is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_GITHUB变量
      if [ -z "${{ secrets.BLOG_GITHUB }}" ]; then
        echo "BLOG_GITHUB is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_LINKEDIN变量
      if [ -z "${{ secrets.BLOG_LINKEDIN }}" ]; then
        echo "BLOG_LINKEDIN is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_YOUTUBE变量
      if [ -z "${{ secrets.BLOG_YOUTUBE }}" ]; then
        echo "BLOG_YOUTUBE is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_FOOTER_TEXT变量
      if [ -z "${{ secrets.BLOG_FOOTER_TEXT }}" ]; then
        echo "BLOG_FOOTER_TEXT is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_GITALK_CLIENT_ID变量
      if [ -z "${{ secrets.BLOG_GITALK_CLIENT_ID }}" ]; then
        echo "BLOG_GITALK_CLIENT_ID is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_GITALK_CLIENT_SECRET变量
      if [ -z "${{ secrets.BLOG_GITALK_CLIENT_SECRET }}" ]; then
        echo "BLOG_GITALK_CLIENT_SECRET is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_GITALK_REPO变量
      if [ -z "${{ secrets.BLOG_GITALK_REPO }}" ]; then
        echo "BLOG_GITALK_REPO is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_GITALK_OWNER变量
      if [ -z "${{ secrets.BLOG_GITALK_OWNER }}" ]; then
        echo "BLOG_GITALK_OWNER is empty. Workflow failed."
        exit 1
      fi
      # 检查BLOG_URL变量
      if [ -z "${{ secrets.BLOG_URL }}" ]; then
        echo "BLOG_URL is empty. Workflow failed."
        exit 1
      fi

      echo "name: '${{ secrets.BLOG_NAME }}'" > _config.yml
      echo "description: '${{ secrets.BLOG_DESCRIPTION }}'" >> _config.yml
      echo "avatar: '${{ secrets.BLOG_AVATAR }}'" >> _config.yml
      echo "favicon: '${{ secrets.BLOG_FAVICON }}'" >> _config.yml
      echo "navigation:" >> _config.yml
      echo "  - name: HomePage" >> _config.yml
      echo "    url: /" >> _config.yml
      echo "  - name: About" >> _config.yml
      echo "    url: /about" >> _config.yml
      echo "  - name: Archive" >> _config.yml
      echo "    url: /archive" >> _config.yml
      echo "  - name: Tags" >> _config.yml
      echo "paginate: ${{ secrets.BLOG_PAGINATE }}" >> _config.yml
      echo "excerpt_separator: '${{ secrets.BLOG_EXCERPT_SEPARATOR }}'" >> _config.yml
      echo "footer-links:" >> _config.yml
      echo "  email: '${{ secrets.BLOG_EMAIL }}'" >> _config.yml
      echo "  github: '${{ secrets.BLOG_GITHUB }}'" >> _config.yml
      echo "  linkedin: '${{ secrets.BLOG_LINKEDIN }}'" >> _config.yml
      echo "  youtube: '${{ secrets.BLOG_YOUTUBE }}'" >> _config.yml
      echo "footer-text: '${{ secrets.BLOG_FOOTER_TEXT }}'" >> _config.yml
      echo "gitalk:" >> _config.yml
      echo "  clientID: '${{ secrets.BLOG_GITALK_CLIENT_ID }}'" >> _config.yml
      echo "  clientSecret: '${{ secrets.BLOG_GITALK_CLIENT_SECRET }}'" >> _config.yml
      echo "  repo: '${{ secrets.BLOG_GITALK_REPO }}'" >> _config.yml
      echo "  owner: '${{ secrets.BLOG_GITALK_OWNER }}'" >> _config.yml
      echo "url: '${{ secrets.BLOG_URL }}'" >> _config.yml
  # Build job
  build:
    runs-on: ubuntu-latest

    needs: setenv
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment: 
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
